https://users.rust-lang.org/t/how-does-move-closure-really-work/65956



// This will not run
fn main() {
    let data = vec![1, 2, 3];
    let closure = move || println!("captured {:?} by value", data);

    println!("{:?}", &data);
}




// However, the following code can compile fine
// 	because i32 have copy trait instead of moving ownership
fn main() {
    let x = 10;
    
    let test = move | | {  println!("chec x value in closure: {}", x);};

    println!("check x {}", x);
    
    test()
}
